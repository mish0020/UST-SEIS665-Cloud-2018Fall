
edit theyml file to add stuff
run this command to package it :
need to configur aws credentials before running aws commands !!!!

aws configure 

access key : blah blah blah
secrete access key : blah blah blah

aws cloudformation package --template-file datapipe.yml --s3-bucket serverless-datapipe-mmishra --output-template-file packaged-datapipe.yml
worked !!
it gave an output :
aws cloudformation deploy --template-file /home/ec2-user/serverless-start/packaged-datapipe.yml --stack-name <YOUR STACK NAME>
use this to deploy above 

stack name is datapipe
aws cloudformation deploy --template-file packaged-datapipe.yml --capabilities CAPABILITY_IAM --stack-name datapipe
# we are working in the same directory. But, i ll give it the absolute path like above (output code)
aws cloudformation deploy --template-file /home/ec2-user/serverless-start/packaged-datapipe.yml --capabilities CAPABILITY_IAM --stack-name datapipe
# We need to add the --capabilities CAPABILITY_IAM flag to the command because the stack will use IAM resources. Run the following command to create a new stack called datapipe:
stack creation failed complaining access to packer. So, I gave admin access to packer user
also, go to cloudformation dashboard and delete the datapipe stack
I used the above existing keypairs and that's why it identified it self a s'packer' user !!!:(
====
datalog.py 
=============
import base64


def lambda_handler(event, context):
    for record in event['Records']:
        # Kinesis data is base64 encoded so decode here
        payload = base64.b64decode(record["kinesis"]["data"])
        print("Decoded payload: " + str(payload))
============================================================
my yml file : datapipe.yml

AWSTemplateFormatVersion: '2010-09-09'
Transform: 'AWS::Serverless-2016-10-31'
Resources:
  DatalogFunction:
    Type: 'AWS::Serverless::Function'
    Properties:
      # Need to add missing properties here
      Handler: datalog.lambda_handler
#The handler specifies the function method AWS will automatically call when invoking the function.
      Runtime: python3.6
      CodeUri: lambda/datalog.py
#The CodeUri references the local storage location of the Lambda function
#code file relative to the CloudFormation YAML template file you are editing.
      MemorySize: 256
      Timeout: 15
      Policies:
       - AWSLambdaKinesisExecutionRole
    Events:
      StreamData:
        Type: kinesis
        Properties:
          Stream: DataStream # present in this template file below :-
          StartingPosition: TRIM_HORIZON
          BatchSize: 50
#The Lambda function executes with the access permissions associated i
#with the execution role. If the function needs to access
#other AWS resources, like a Kinesis stream, the execution role needs
#to explicitly allow the function to access these resources.
# https://github.com/awslabs/serverless-application-model/blob/master/versions/2016-10-31.md
#

  DataStream:
    Type: AWS::Kinesis::Stream
    Properties:
      Name: datastream
      ShardCount: 1
      Tags:
        -
          Key: 'Project'
          Value: 'SEIS665'
=========================================================================
